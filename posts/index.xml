<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Datenschauer</title>
    <link>https://datenschauer.de/posts/</link>
    <description>Recent content in Posts on Datenschauer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-DE</language>
    <lastBuildDate>Tue, 12 Jul 2022 00:00:00 +0200</lastBuildDate><atom:link href="https://datenschauer.de/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Schnelle Python WebApps bauen mit Anvil</title>
      <link>https://datenschauer.de/posts/schnelle-python-webapps-bauen-mit-anvil/</link>
      <pubDate>Tue, 12 Jul 2022 00:00:00 +0200</pubDate>
      
      <guid>https://datenschauer.de/posts/schnelle-python-webapps-bauen-mit-anvil/</guid>
      <description>In unserem wissenschaftlichen Alltag - und sehr wahrscheinlich nicht nur da - ist es wichtig, manche Ideen schnell umzusetzen und auszutesten.
die Herausforderung: ein anonymes Anmeldeverfahren Im Projekt FALKO-PV stehen wir vor der Herausforderung, ein gut funktionierendes, aber möglichst anonymes Anmeldeverfahren für eine Web-App zu entwickeln, mit der Schüler:innen ihren Unterricht bewerten können. Diese Unterrichtsbewertung durch Schüler:innen ist ein wichtiger Bestandteil in unserem Studiendesign, von der viel abhängt. Wir bilden einen umfangreichen psychometrischen Fragebogen als App ab, die sowohl von Lehrer:innen- als auch Schüler:innen-Seite völlig anonym genutzt werden kann.</description>
      <content>&lt;p&gt;In unserem wissenschaftlichen Alltag - und sehr wahrscheinlich nicht nur da - ist es wichtig, manche Ideen schnell umzusetzen und auszutesten.&lt;/p&gt;
&lt;h2 id=&#34;die-herausforderung-ein-anonymes-anmeldeverfahren&#34;&gt;die Herausforderung: ein anonymes Anmeldeverfahren&lt;/h2&gt;
&lt;p&gt;Im Projekt &lt;a href=&#34;https://falko-pv.de&#34;&gt;FALKO-PV&lt;/a&gt; stehen wir vor der Herausforderung, ein gut funktionierendes, aber möglichst &lt;em&gt;anonymes&lt;/em&gt; Anmeldeverfahren für eine Web-App zu entwickeln, mit der Schüler:innen ihren Unterricht bewerten können. Diese Unterrichtsbewertung durch Schüler:innen ist ein wichtiger Bestandteil in unserem Studiendesign, von der viel abhängt. Wir bilden einen umfangreichen psychometrischen Fragebogen als App ab, die sowohl von Lehrer:innen- als auch Schüler:innen-Seite völlig anonym genutzt werden kann. Dabei starten Lehrkräfte eine Umfrage, an der dann durch Weitergabe eines QR-Codes an die Schüler:Innen diese daran teilnehmen können. Die Antworten auf einer einfachen fünf-stufigen Likertskala werden dann herangezogen, um die Qualität des Unterrichts auf einer Skala von - bis jetzt - neun Dimensionen und mehreren Subdimensionen zu bewerten. Natürlich könnten die Schüler:Innen die Antworten geben, ohne sich vorher anzumelden. Da die Erhebung der Unterrichtsqualität aber zu mehreren Erhebungszeitpunkten im Schuljahr erfolgt, könnten wir so Veränderungen der Qualität immer nur auf Klassenebene beobachten. Dabei würden wir aber wichtige Informationen auf Individualebene verlieren. Um dies zu verhindern, müssen die gegebenen Anworten der einzelnen Schüler:innen getracked werden. Sie müssen sich also anmelden. Allerdings sollte nach der Anmeldung kein Rückschluss möglich sein auf die tatsächlichen Kinder und Jugendlichen einer Klasse.&lt;/p&gt;
&lt;h3 id=&#34;bisherige-praxis-schüler-innen-vergeben-einen-eigenen-code&#34;&gt;bisherige Praxis: Schüler:Innen vergeben einen eigenen Code&lt;/h3&gt;
&lt;p&gt;Um die Anonymität von Teilnehmer:innen bei solchen Befragungen zu bewahren, war es Usus, den Befragten die Erstellung eines eigenen Codes zu überlassen; meistens in der Form: &amp;ldquo;Nimm die zwei Anfangsbuchstaben des Namens deiner Mutter; addiere zur Zahl deiner Hausnummer die Zahl des Monats, in dem du geboren wurdest, usw.&amp;rdquo;. Das Problem an diesen Zeichenketten ist jedoch, dass sie schnell vergessen werden und - man sieht es an den Anweisungen, wie bei der Frage nach dem Geburtsmonat - oft nicht so ganz anonym sind.&lt;/p&gt;
&lt;p&gt;Auch die Vergabe von Codes durch die Lehrkraft ist auf Grund der Tatsache, dass die Codes keine Rückschlüsse auf die eigentlichen Individuen geben sollen, ausgeschlossen. Was also tun?&lt;/p&gt;
&lt;h3 id=&#34;idee-anmelden-über-ein-individuelles-bildermuster-und-anwendung-einer-mnemo-technik&#34;&gt;Idee: Anmelden über ein individuelles Bildermuster und Anwendung einer Mnemo-Technik&lt;/h3&gt;
&lt;p&gt;Bei nächtlichen Überlegungen zu dieser Problematik viel mir eine Mnemotechnik ein, die ich selbst oft verwende: durch das Erzählen kleiner &amp;ldquo;verrückter&amp;rdquo; Geschichten lassen sich Fakten und Zusammenhänge viel besser merken. Kombiniert man dies dann noch mit einprägsamen Bildern, ist die Vergessenskurve nicht ganz so extrem. So war die Idee für ein stabiles aber anonymes Anmeldeverfahren für die Individuen einer Klasse geboren.&lt;/p&gt;
&lt;p&gt;Die Schüler:innen sollten vier Mal mit sechs Bildern konfrontiert werden, aus denen sie sich jeweils eines aussuchen. Hinter jedem Bild steckt eine Zahl von 1 bis 6. Haben sie sich also für vier Bilder entschieden so haben sie im Hintergrund einen vierstelligen Pin-Code auf der Basis der Zahlen 1 bis 6 generiert. Mit diesem Pin-Code können sie sich dann immer wieder anmelden. Der Clou ist aber nun, dass sie diesen Pin-Code gar nicht kennen und sich auch nicht merken müssen. Alles was sie behalten müssen, sind die Bilder, die sie ausgewählt haben. Das bedeutet: bei jedem Anmeldeverfahren müssen sie einfach wieder die selben Bilder auswählen, wie beim ersten Mal. Um diese gleichbleibende Auswahl zu unterstützen kommt die erwähnte Mnemotechnik ins Spiel: die Bilder werden aus vier Themenbereichen gewählt, die möglichst stabile persönliche aber nicht direkt zuordbare Merkmale der Schüler:innen abbilden, wie &amp;ldquo;Welches Fabelwesen beschreibt dich im Kindergartenalter am besten?&amp;rdquo;, &amp;ldquo;Wo hast du bis jetzt am häufigsten Urlaub gemacht?&amp;rdquo; oder &amp;ldquo;Wie legst du die größte Strecke deines Schulwegs zurück?&amp;rdquo;. Dabei sollten die zur Auswahl stehenden Bilder eine möglichst hohe Varianz erzeugen, also beim &amp;ldquo;Fabelwesen&amp;rdquo; einfach mal das Einhorn weglassen, damit nicht alle jüngeren Mädchen auf Grund kultureller Erzeihugen dieses eine Tier nehmen. Die vier Themen wurden dann weiter so ausgewählt, dass sie in ihrer Reihenfolge einen leicht zu merkenden Satz ergeben. Das erste Thema ist also z.B. ein Wesen oder Tier, das zweite Thema eine Farbe, das dritte Thema ein Ort und das vierte Thema eine Tätigkeit. So lässt sich nach der Auswahl der Bilder ein Satz in der Form: &amp;ldquo;Ein so und so &amp;lt;farbiges&amp;gt; &amp;lt;Wesen&amp;gt; &amp;lt;tut etwas&amp;gt; in/am &amp;lt;Ort&amp;gt;.&amp;rdquo; Es kommen somit Sätze zustande wie: &amp;ldquo;Eine blaue Fee fährt auf dem Campingplatz Ski&amp;rdquo;, oder &amp;ldquo;Ein rotes Meerschweinchen fährt im alten Ägypten mit dem Bus.&amp;rdquo;. Sowohl die visuelle Anordnung der Bilder, als auch die leicht verrückten und daher eingängigen Sätze sollen beim &lt;em&gt;Memorieren&lt;/em&gt; der Anmeldung helfen.&lt;/p&gt;
&lt;h2 id=&#34;nächste-herausforderung-das-testen&#34;&gt;nächste Herausforderung: das Testen&lt;/h2&gt;
&lt;p&gt;Nun kann man sich natürlich die schönsten Verfahren ausdenken, und sich ob seiner Kreativität freuen, aber, gerade als empirisch Forschender fragt man sich sofort: hält dies auch der Realität stand oder zerschellt mein Konzept am tatsächlichen &amp;ldquo;Doing&amp;rdquo; der Kinder und Jugendlichen dort draussen? Einwände kamen auch von befreundeten Pädagog:innen und Psycholog:innen. Man musste das Verfahren also an realen Personen testen. Aber wie? Man müsste ja solch ein Anmeldeverfahren erst einmal programmieren, und das möglichst schnell und dann auch noch am besten kostenlos, denn in Drittmittel geförderten Projekten drängt oft die Zeit und Gelder, die vorher nicht genau spezifiziert wurden, können nicht ausgegeben werden.&lt;/p&gt;
&lt;p&gt;Darüber hinaus war mir klar, dass ich am schnellsten zu einem Ergebnis komme, wenn ich mich nicht erst in ein bestimmtes Framework oder neue Programmiersprache einarbeiten muss. Und da ich in den letzten Jahren eigentlich fast ausschliesslich mit Python und R gearbeitet habe (meine PHP und JavaScript Kenntnisse würde ich als eher &amp;ldquo;eingerostet&amp;rdquo; nennen), war klar, dass ich auf der Suche nach einem Tool war, mit folgenden Anforderungen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;schnelle Umsetzung einer Web-App ohne groß JS, HTML und CSS zu schreiben&lt;/li&gt;
&lt;li&gt;Umsetzung möglichst mit Python als Code-Basis&lt;/li&gt;
&lt;li&gt;kostenlos&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Diese Anforderungen sah ich in &lt;a href=&#34;https://anvil.works&#34;&gt;Anvil&lt;/a&gt; realisiert, über das ich im &lt;a href=&#34;https://realpython.com/podcasts/rpp/63/&#34;&gt;RealPython Podcast&lt;/a&gt; erfahren habe, und testete es aus. So viel kann ich gleich vorweg sagen: ich wurde nicht enttäuscht. Im Gegenteil: alle meine Erwartungen wurden eigentlich übertroffen.&lt;/p&gt;
&lt;h2 id=&#34;anvil-ein-kleines-online-python-framework-für-rapides-web-app-development&#34;&gt;Anvil: ein kleines Online-Python-Framework für rapides Web-App Development&lt;/h2&gt;
&lt;p&gt;Anvil ist ein kleines Framework, mit dem man vollständig in einem Editor im Browser Web-Apps erstellen kann. Alle Web-Apps, die man damit erstellt, können über die Anvil Plattform kostenlos gehostet werden. Ein Bezahlplan (ab ca. 14,- Euro / Monat) bietet mehr Annehmlichkeiten, wie die Verwendung einer eigenen Domain, der Installation weiterer Python Module, die Verwendung verschiedener Datenbanken und mehr. Eine Übersicht über die unterschiedlichen Stufen gibt es &lt;a href=&#34;https://anvil.works/pricing&#34;&gt;hier&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Der Webeditor bietet eine sehr intuitiven GUI, mit der man über verschieden Elemente sehr leicht eine Seite &amp;ldquo;zusammenbauen&amp;rdquo; kann.&lt;/p&gt;

  &lt;figure class=&#34;left&#34; &gt;
    &lt;img src=&#34;https://datenschauer.de/ox-hugo/anvil_form_designer.gif&#34;   /&gt;
    
  &lt;/figure&gt;


&lt;p&gt;Darüber hinaus lassen sich dann die platzierten Elemente direkt im &lt;em&gt;client-side Code&lt;/em&gt; ansprechen. So lässt sich der Klick auf einen Button mit einer einfachen Funktion realisieren:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;button_click&lt;/span&gt;(self, &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;event_args):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; alert(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Button gedrückt!&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Drück mich!&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; result:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        open_form(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;thank_you_page&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Natürlich gibt es auch eine visuell zu bearbeitende Datenbank, die sich sehr leicht mit dem Server-Side Code ansprechen lässt.&lt;/p&gt;

  &lt;figure class=&#34;left&#34; &gt;
    &lt;img src=&#34;https://datenschauer.de/ox-hugo/anvil_data_table.png&#34;   /&gt;
    
  &lt;/figure&gt;


&lt;p&gt;Die Daten lassen sich als CSV exportieren, die wir dann wiederum mit dem Python Data Science Stack auswerten konnten.&lt;/p&gt;
&lt;p&gt;Darüber hinaus bietet Anvil eine Unmenge an sehr guten &lt;a href=&#34;https://anvil.works/learn&#34;&gt;Tutorials&lt;/a&gt;, sowie eine eingängige &lt;a href=&#34;https://anvil.works/learn&#34;&gt;Dokumentation&lt;/a&gt;, die es einem leicht machen, das Framework schnell zu verstehen. Eine freundliche Community hilft überdies bei Problemen.&lt;/p&gt;
&lt;p&gt;Hier noch ein paar Impressionen aus der erstellten Web-App:&lt;/p&gt;

  &lt;figure class=&#34;left&#34; &gt;
    &lt;img src=&#34;https://datenschauer.de/ox-hugo/anvil_webapp_1.png&#34;   /&gt;
    
  &lt;/figure&gt;



  &lt;figure class=&#34;left&#34; &gt;
    &lt;img src=&#34;https://datenschauer.de/ox-hugo/anvil_webapp_2.png&#34;   /&gt;
    
  &lt;/figure&gt;



  &lt;figure class=&#34;left&#34; &gt;
    &lt;img src=&#34;https://datenschauer.de/ox-hugo/anvil_webapp_3.png&#34;   /&gt;
    
  &lt;/figure&gt;


&lt;h2 id=&#34;zusammenfassung&#34;&gt;Zusammenfassung&lt;/h2&gt;
&lt;p&gt;Anvil hat es mir ermöglicht, innerhalb weniger Tage eine fehlerfreie App zu publizieren, mit der wir als Forschungsgruppe das Anmeldeverfahren an gut 150 Menschen testen konnten. Zwar läuft der Test noch, aber es zeigt sich jetzt schon, dass das Anmeldeverfahren sehr stabil läuft und im Gegensatz zu einer Kontrollgruppe, die auf herkömmliche Weise einen Code erstellen muss, keine so große Vergessenskurve aufweist.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Terravision - the billion Dollar Code</title>
      <link>https://datenschauer.de/posts/terravision-the-billion-dollar-code/</link>
      <pubDate>Tue, 19 Oct 2021 00:00:00 +0200</pubDate>
      
      <guid>https://datenschauer.de/posts/terravision-the-billion-dollar-code/</guid>
      <description>Auf Netflix gibt es gerade eine neue Miniserie in vier Teilen namens The Billion Dollar Code. Dabei geht es um die Software Terravision des Berliner Vereins Art+Com aus dem Jahr 1994, dessen Patent Anfang der 2000er benutzt wurde, um Google Earth zu kreiren. Der Film stellt die Entstehung, die Patentverletzungen und den Verlauf der Gerichtsverhandlungen dramatourgisch dar. Doch die Ereignisse basieren eben auf wahren Ereignissen.
Erfahren habe ich von der Netflix Serie über die neuste Folge meines absoluten Lieblingspodcast CRE - Technik Kultur Gesellschaft von Tim Pritlove, der durch Interviews auch an dieser Schnittstelle von Technologie, Gesellschaft und Kultur agiert.</description>
      <content>&lt;p&gt;Auf Netflix gibt es gerade eine neue Miniserie in vier Teilen namens &lt;a href=&#34;https://www.netflix.com/de/title/81074012&#34;&gt;The Billion Dollar Code&lt;/a&gt;. Dabei geht es um die Software &lt;strong&gt;Terravision&lt;/strong&gt; des Berliner Vereins &lt;em&gt;Art+Com&lt;/em&gt; aus dem Jahr 1994, dessen Patent Anfang der 2000er benutzt wurde, um &lt;strong&gt;Google Earth&lt;/strong&gt; zu kreiren. Der Film stellt die Entstehung, die Patentverletzungen und den Verlauf der Gerichtsverhandlungen dramatourgisch dar. Doch die Ereignisse basieren eben auf wahren Ereignissen.&lt;/p&gt;
&lt;p&gt;Erfahren habe ich von der Netflix Serie über die &lt;a href=&#34;https://cre.fm/cre222-terravision&#34;&gt;neuste Folge&lt;/a&gt; meines absoluten Lieblingspodcast &lt;em&gt;CRE - Technik Kultur Gesellschaft&lt;/em&gt; von &lt;a href=&#34;https://twitter.com/timpritlove&#34;&gt;Tim Pritlove&lt;/a&gt;, der durch Interviews auch an dieser Schnittstelle von Technologie, Gesellschaft und Kultur agiert. Dort spricht &lt;a href=&#34;https://twitter.com/pavel23&#34;&gt;Pavel Mayer&lt;/a&gt; dreieinhalbe (!) Stunden über Terravision, den Streit mit Google und die Entstehung der Miniserie.&lt;/p&gt;
&lt;p&gt;Es ist unglaublich, dass diese Story oder die Existenz von Terravision vollkommen an mir vorbei ging. Im Prinzip waren es nur vier Typen, die 1994/95 das zustande brachten, was Google Earth erst zehn/fünfzehn Jahre später konnte. Auf Youtube kann man sich einen kurzen Ausschnitt von der Cebit 1998 ansehen, auf der Terravision vorgestellt wird - witzigerweise von Tim Pritlove, der auch eine Zeit lang für Art+Com gearbeitet hatte. Das muss damals schon an Zauberei gegrenzt haben, mit dieser riesigen Kugel quasi die ganze Erde zu bewegen und nahtlos bis in 3D Gebäude hinein zu zoomen. Ein wirkliche Meisterleistung!&lt;/p&gt;
&lt;p&gt;Ich empfehle unbedingt 1) das Interview mit Pavel vollständig anzuhören um so mehr über die überraschend interessante deutsche Techgeschichte zu erfahren, 2) natürlich die Miniserie auf Netflix anzusehen und 3) &lt;a href=&#34;https://www.netflix.com/title/81503864&#34;&gt;das Making Of&lt;/a&gt; dazu, um noch einmal alle Protagonisten im Original und nettes 90er Jahre Footage dazu zu sehen.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Emacs Basics - Tastenkombinationen</title>
      <link>https://datenschauer.de/posts/emacs-basics-tastenkombinationen/</link>
      <pubDate>Thu, 14 Oct 2021 00:00:00 +0200</pubDate>
      
      <guid>https://datenschauer.de/posts/emacs-basics-tastenkombinationen/</guid>
      <description>&amp;ldquo;C&amp;rdquo; und &amp;ldquo;M&amp;rdquo; In Emacs &amp;ldquo;bewegt&amp;rdquo; man sich viel über Tastenkombinationen. Dafür werden vor allem die Strg-Taste und die Alt- oder Esc-Taste gedrückt. Die Strg-Taste heißt im Englischen &amp;ldquo;Control&amp;rdquo; = &amp;ldquo;Ctrl&amp;rdquo; und wird daher mit &amp;ldquo;C-&amp;rdquo; abgekürzt. Wenn man also irgendwo die Tastenkombination C-x liest so heißt das: &amp;ldquo;Drücke die Tasten &amp;lsquo;Strg&amp;rsquo; und &amp;lsquo;x&amp;rsquo; gleichzeitig.&amp;rdquo; Achtung: gibt es Kombinationen mit Großbuchstaben, so müssen drei Tasten gleichzeitig gedrückt werden. So meint C-X das gleichzeitige Drücken von &amp;ldquo;Strg&amp;rdquo;, &amp;ldquo;Shift&amp;rdquo; und &amp;ldquo;x&amp;rdquo;.</description>
      <content>&lt;h2 id=&#34;c-und-m&#34;&gt;&amp;ldquo;C&amp;rdquo; und &amp;ldquo;M&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;In Emacs &amp;ldquo;bewegt&amp;rdquo; man sich viel über Tastenkombinationen. Dafür werden vor allem die Strg-Taste und die Alt- oder Esc-Taste gedrückt. Die Strg-Taste heißt im Englischen &amp;ldquo;Control&amp;rdquo; = &amp;ldquo;Ctrl&amp;rdquo; und wird daher mit &amp;ldquo;C-&amp;rdquo; abgekürzt. Wenn man also irgendwo die Tastenkombination &lt;code&gt;C-x&lt;/code&gt; liest so heißt das: &amp;ldquo;Drücke die Tasten &amp;lsquo;Strg&amp;rsquo; und &amp;lsquo;x&amp;rsquo; gleichzeitig.&amp;rdquo; Achtung: gibt es Kombinationen mit Großbuchstaben, so müssen drei Tasten gleichzeitig gedrückt werden. So meint &lt;code&gt;C-X&lt;/code&gt; das gleichzeitige Drücken von &amp;ldquo;Strg&amp;rdquo;, &amp;ldquo;Shift&amp;rdquo; und &amp;ldquo;x&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Eine weitere wichtige Taste ist die &amp;ldquo;Meta-Taste&amp;rdquo;. Sie gibt es auf heutigen Tastaturen nicht mehr und ist ein Relikte aus den frühen achziger Jahren. Dort gab es die Taste auf Keyboards sogenannter LISP-Machines. Da die Taste auf heutigen Tastaturen fehlt muss natürlich Ersatz her. In eine Standard Emacs Installation ist die Meta Taste die Alt- oder die ESC-(Escape-)Taste. Sie wird mit &amp;ldquo;M&amp;rdquo; für &amp;ldquo;Meta&amp;rdquo; abgekürzt. List man also irgenwo &lt;code&gt;M-x&lt;/code&gt; so meint das: &amp;ldquo;Drücke die Alt-Taste und die Taste &amp;lsquo;x&amp;rsquo; gleichzeitig!&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;die-wichtigsten-bewegungen&#34;&gt;Die wichtigsten Bewegungen&lt;/h2&gt;
&lt;p&gt;Hier eine kleine Liste der wichtigsten Bewegungen in Emacs:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tasten&lt;/th&gt;
&lt;th&gt;Funktion&lt;/th&gt;
&lt;th&gt;Bewegung&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-f&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;forward-char&lt;/td&gt;
&lt;td&gt;ein Zeichen nach rechts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;backward-char&lt;/td&gt;
&lt;td&gt;ein Zeichen nach links&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-n&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;next-line&lt;/td&gt;
&lt;td&gt;eine Zeile nach unten&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-p&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;previous-line&lt;/td&gt;
&lt;td&gt;eine Zeile nach oben&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;M-f&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;forward-word&lt;/td&gt;
&lt;td&gt;ein Wort nach rechts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;M-b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;backward-word&lt;/td&gt;
&lt;td&gt;ein Wort nach links&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-v&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;scroll-up-command&lt;/td&gt;
&lt;td&gt;Seite nach unten (= nach oben scrollen)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;M-v&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;scroll-down-command&lt;/td&gt;
&lt;td&gt;Seite nach oben (= nach unten scrollen)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-l&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;recenter-top-bottom&lt;/td&gt;
&lt;td&gt;Seite auf Cursor Position zentrieren&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;M-&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;beginning-of-buffer&lt;/td&gt;
&lt;td&gt;an den Anfang des Buffers springen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;M-&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;end-of-buffer&lt;/td&gt;
&lt;td&gt;an das Ende des Buffers springen&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;weitere-wichtige-tastenkombinationen&#34;&gt;weitere wichtige Tastenkombinationen&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tasten&lt;/th&gt;
&lt;th&gt;Funktion&lt;/th&gt;
&lt;th&gt;Beschreibung&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-x C-f&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;find-file&lt;/td&gt;
&lt;td&gt;Datei öffnen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-x C-s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;save-buffer&lt;/td&gt;
&lt;td&gt;Datei speichern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-x s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;save-some-buffers&lt;/td&gt;
&lt;td&gt;alle Buffer speichern&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-x C-c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;save-buffers-kill-terminal&lt;/td&gt;
&lt;td&gt;alle Buffer speichern und Emacs beenden&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;M-x&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;execute-extended-command&lt;/td&gt;
&lt;td&gt;einen Befehl eingeben&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-x b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;switch-to-buffer&lt;/td&gt;
&lt;td&gt;zu einem anderen Buffer wechseln&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-x C-b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;list-buffers&lt;/td&gt;
&lt;td&gt;alle Buffer auflisten&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-x o&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;other-window&lt;/td&gt;
&lt;td&gt;in ein anderes Fenster springen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-x 0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;delete-window&lt;/td&gt;
&lt;td&gt;ein Fenster schließen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-x 1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;delete-other-windows&lt;/td&gt;
&lt;td&gt;alle Fenster bis auf das akttuelle schließen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-x 2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;split-window-below&lt;/td&gt;
&lt;td&gt;Fenster horizontal teilen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;C-x 3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;split-window-right&lt;/td&gt;
&lt;td&gt;Fenster vertikal teilen&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    </item>
    
  </channel>
</rss>
